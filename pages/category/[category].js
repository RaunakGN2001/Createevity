import { Box, Text } from '@chakra-ui/react'
import Head from 'next/head'
import  { useRouter } from 'next/router';
import qs from 'qs';

import React from 'react'
import ArticleList from '../../components/ArticleList';
import Pagination from '../../components/Pagination';
import Tabbar from '../../components/Tabbar';
import { fetchArticles, fetchCategories } from '../../http';

const Category = ({categories, articles, slug}) => {
  
  
 
  const formattedCategory = () => {

    
    var slugMod = slug[0].toUpperCase() + slug.slice(1,slug.length);
    // console.log(slugMod);
    for(let i = 0; i < slugMod.length; i++) {
      if(slugMod[i] == '-') slugMod[i] = ' ';
    }

    return slugMod;
  };

  const { page,pageCount } = articles.pagination;

  const router = useRouter();
  const {category} = router.query;

  const handleSearch = (query) => {
    router.push(`/category/${category}?search=${query}`)
  }


  // console.log(category);

  return (
    <>
      <Head>
        <title>Createevity {formattedCategory()} </title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Tabbar categoriesArray={categories.items} handleOnSearch={handleSearch}/>
      <ArticleList articlesArray={articles.items} />
      <Pagination page={page} pageCount={pageCount} redirectURL={`/category/${category}`} />
    </>
  )
}

export async function getServerSideProps({query}) {


  const options = {
    populate: ['author.avatar'],
    sort: ['id:desc'],
    filters: {
      category: {
        slug: query.category,
      },
    },
    pagination: {
      page: query.page ? query.page : 1,
      pageSize: 4
    }
  };


  const queryString = qs.stringify(options);

  const dataArticle = await fetchArticles(queryString);


  const dataCategory = await fetchCategories();

  return {
    props: {
      categories: {
        items: dataCategory.data.data,
        pagination: dataCategory.data.meta.pagination
      },
      articles : {
        items: dataArticle.data.data,
        pagination: dataArticle.data.meta.pagination,
      },

      slug: query.category,
      
    }
  }

}

export default Category


